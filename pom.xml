<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2020 Svante Schubert

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.oasis-open.odf-tc</groupId>
    <artifactId>odf-specification-tooling</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <name>Tooling for the ODF specification</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- shared latest update of XSL transformation for ODF 1.2 and ODF 1.3 --> 
        <odf13.html.stylesheet>src/test/resources/odf1.3/tools/odf2html/export/xhtml/opendoc2xhtml.xsl</odf13.html.stylesheet>
        <odf13.default.stylesheet>src/test/resources/odf1.3/tools/getAttributeDefaults.xsl</odf13.default.stylesheet>
        <odf13.rnghtml.stylesheet>src/test/resources/odf1.3/tools/rng2html/addRefs4rng-html.xsl</odf13.rnghtml.stylesheet>
        <!-- ODF 1.3 input --> 
        <odf13.part1.input>src/main/resources/odf1.3/OpenDocument-v1.3-part1-introduction_odt</odf13.part1.input>
        <odf13.part2.input>src/main/resources/odf1.3/OpenDocument-v1.3-part2-packages_odt</odf13.part2.input>
        <odf13.part3.input>src/main/resources/odf1.3/OpenDocument-v1.3-part3-schema_odt</odf13.part3.input>
        <odf13.part4.input>src/main/resources/odf1.3/OpenDocument-v1.3-part4-formula_odt</odf13.part4.input>
        <odf13.rng-html.input>src/test/resources/odf1.3/tools/rng2html/</odf13.rng-html.input>
        <!-- ODF 1.2 input - using same new part numbering as in ODF 1.3 -->                
        <odf12.part1.input>src/main/resources/odf1.2/OpenDocument-v1.2-os_odt</odf12.part1.input>
        <odf12.part2.input>src/main/resources/odf1.2/OpenDocument-v1.2-os-part3_odt</odf12.part2.input>
        <odf12.part3.input>src/main/resources/odf1.2/OpenDocument-v1.2-os-part1_odt</odf12.part3.input>
        <odf12.part4.input>src/main/resources/odf1.2/OpenDocument-v1.2-os-part2_odt</odf12.part4.input>
        <jdk.version>11</jdk.version>
        <version.saxon-he>9.9.1-7</version.saxon-he>
    </properties>

    <dependencies>

        <!-- logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.13.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.13.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.13.3</version>
            <scope>test</scope>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.6.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.6.2</version>
            <scope>test</scope>
        </dependency>

        <!-- transforming -->
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>${version.saxon-he}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- SAXON XSLT 2.0 processor -->
            <!-- see https://www.mojohaus.org/xml-maven-plugin/examples/transform-saxon.html-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <!-- extract default values from schema part  -->
                        <transformationSet>
                            <dir>${odf13.part3.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.default.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf13-default-values.xml</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <!-- add references to all three semi-automatic created RNG-HTML files -->
                        <transformationSet>
                            <dir>${odf13.rng-html.input}</dir>
                            <includes>*-rng.html</includes>
                            <stylesheet>${odf13.rnghtml.stylesheet}</stylesheet>
                            <outputProperties>
                                <outputProperty>
                                    <name>omit-xml-declaration</name>
                                    <value>yes</value>
                                </outputProperty>
                                <outputProperty>
                                    <name>version</name>
                                    <value>5</value>
                                </outputProperty>
                            </outputProperties>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <!-- HTML XSL transformations triggered by LO to have all content (esp. mathml) in one file 
                            a) Local XSL would require update 
                            b) We receive the images within the HTML base64 encoded -->

                        <!-- part 1 HTML transformation (introduction) 
                        <transformationSet>
                            <dir>${odf13.part1.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf13-intro.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> -->

                        <!-- part 2 HTML transformation (packages) -->
                        <transformationSet>
                            <dir>${odf13.part2.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf13-packages.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> 

                        <!-- part 3 HTML transformation (schema) 
                        <transformationSet>
                            <dir>${odf13.part3.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf13-schema.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> -->

                        <!-- part 4 HTML transformation (formula) 
                        <transformationSet>
                            <dir>${odf13.part4.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf13-formula.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> -->

                        <!-- Disabling ODF 1.2 transformations for ODF 1.3 editing iterations -->
                        <!-- extract default values from schema part
                        <transformationSet>
                            <dir>${odf12.part3.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.default.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf12-default-values.xml</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> -->

                        <!-- part 1 HTML transformation (introduction) 
                        <transformationSet>
                            <dir>${odf13.part1.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf12-intro.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>-->

                        <!-- part 2 HTML transformation (packages) 
                        <transformationSet>
                            <dir>${odf12.part2.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf12-packages.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> -->

                        <!-- part 3 HTML transformation (schema) 
                        <transformationSet>
                            <dir>${odf12.part3.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf12-schema.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet> -->

                        <!-- part 4 HTML transformation (formula) 
                        <transformationSet>
                            <dir>${odf12.part4.input}</dir>
                            <includes>content.xml</includes>
                            <stylesheet>${odf13.html.stylesheet}</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>odf12-formula.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>-->
                    </transformationSets>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>Saxon-HE</artifactId>
                        <version>${version.saxon-he}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <!-- <forkCount>3</forkCount>
                    <reuseForks>true</reuseForks>-->
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
                    <systemPropertyVariables>
                        <basedir>${basedir}</basedir>
                    </systemPropertyVariables>
                    <!--<skipTests>${skipTests}</skipTests>-->
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
